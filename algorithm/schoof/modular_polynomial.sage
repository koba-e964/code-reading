import collections

primes = [31, 107]
traces = [11, 0]

for i in range(len(primes)):
    p = primes[i]
    t = traces[i]
    disc = t * t - 4 * p
    R.<x> = PolynomialRing(GF(p))
    print(f"q = {p}, j = 0")
    # https://math.mit.edu/~drew/ClassicalModPolys.html
    # Y = j((1+sqrt(-3))/2) = 0
    mod_polys = [
        None,
        None,
        x^3 - 162000 * x^2 + 8748000000 * x - 157464000000000,
        x^4 + 36864000 * x^3 + 452984832000000 * x^2 + 1855425871872000000000 * x,
        None,
        x^6 + 1963211489280 * x^5 + 1284733132841424456253440 * x^4 + 280244777828439527804321565297868800 * x^3 + 6692500042627997708487149415015068467200 * x^2 + 53274330803424425450420160273356509151232000 * x + 141359947154721358697753474691071362751004672000,
        None,
        x^8 + 104545516658688000 * x^7 + 3643255017844740441130401792000000 * x^6 + 42320664241971721884753245384947305283584000000000 * x^5 + 41375720005635744770247248526572116368162816000000000000 * x^4 + 13483958224762213714698012883865296529472356352000000000000000 * x^3 + 1464765079488386840337633731737402825128271675392000000000000000000 * x^2,
        None,
        None,
        None,
        x^12 + 296470902355240575283200000 * x^11 + 29298331981110197366602526090413106879319244800000000 * x^10 + 965122546660349298406724063940884252743873633176129290337528305418240000000000 * x^9 + 1338586400912357073420399795635643400599836918986297982928179335149920452608000000000000 * x^8 + 618840723107761889896363016885251574078635388443306832549992828319945330157158400000000000000000 * x^7
            + 95356266594731795079493309965756674711058734831164489212811553129058773080352804044800000000000000000000 * x^6 - 3111357148902865912417988391836350251682805385917571877568422664218078901010004935966720000000000000000000000 * x^5 + 43714682637171236021367604966833305309923746974850894665325331604362303109715777067941888000000000000000000000000 * x^4
            - 337500037290942764495395868386562971754016116785390841072048221617443316658082155384012800000000000000000000000000000 * x^3 + 1509199706449264373105244249368970977209959173066491449939153900434037998316228131684352000000000000000000000000000000000 * x^2 - 3708476896661234261166595138586620846782660237574536888784393380944856551532392652692520960000000000000000000000000000000000 * x + 3924233450945276549086964624087200490995247233706746270899364206426701740619416867392454656000000000000000000000000000000000000,
    ]

    for l in range(len(mod_polys)):
        if mod_polys[l] is not None:
            factors = factor(mod_polys[l])
            degree_map = collections.defaultdict(int)
            for (f, e) in list(factors):
                degree_map[int(f.degree())] += e
            degrees = sorted(degree_map.items(), key = lambda x: x[0])

            print(f"  l = {l}, is_square(disc, l): {GF(l)(disc).is_square()}, degs = {degrees}, Phi_{l} = {factors}")
